/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *                    Modified by Mirko Denecke <mirkix@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include <dt-bindings/board/am335x-bbw-bbb-base.h>
#include <dt-bindings/pinctrl/am33xx.h>

/{
	model = "TI AM335x BeagleBone Black";
	compatible = "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
};

&am33xx_pinmux {

	pru_pins: pinmux_pru_pins {
		pinctrl-single,pins = <
			/*0x03c 0x35*/	/* ecap0_in_pwm0_out.pr1_ecap0_ecap_capin, MODE5 | INPUT_PULLUP | PRU, PPM-sum, SBUS, DSM  */
			/* 0x03c 0x2E	gpmc_ad15.pr1_pru0_pru_r31_15, MODE6 | INPUT | PRU, PPM-sum, SBUS, DSM, rcin_ch1 */

            /* rcin5678 */
            0x1ac 0x2E     /*mcasp0_ahclkr, pr1_pru0_pru_r31_7, P9_25, PULL_DOWN, add for rcin_ch5*/
            0x1a4 0x2E     /* mcasp0_fsr, pr1_pru0_pru_r31_5, P9_27, PULL_DOWN, add for rcin_ch6*/
            0x19c 0x2E     /*mcasp0_axr1, pr1_pru0_pru_r31_3, P9_27, PULL_DOWN, add for rcin_ch7*/
            0x1a0 0x2E      /*mcasp0_aclkr, pr1_pru0_pru_r31_4, P9_27, PULL_DOWN, add for rcin_ch8*/

            /*disable pwm8 combine*/
			/*0x164 0x0F   ecap0_in_pwm0_out, GPIO0_7, P9_42A */

			0x0e8 0x25	/* lcd_pclk.pr1_pru1_pru_r30_10, MODE5 | OUTPUT | PRU, CH_1 */
			0x0e0 0x25	/* lcd_vsync.pr1_pru1_pru_r30_8, MODE5 | OUTPUT | PRU, CH_2 */
			0x0ec 0x25	/* lcd_ac_bias_en.pr1_pru1_pru_r30_11, MODE5 | OUTPUT | PRU, CH_3 */
			0x0e4 0x25	/* lcd_hsync.pr1_pru1_pru_r30_9, MODE5 | OUTPUT | PRU, CH_4 */
			0x0bc 0x25	/* lcd_data7.pr1_pru1_pru_r30_7, MODE5 | OUTPUT | PRU, CH_5 */
			0x0b8 0x25	/* lcd_data6.pr1_pru1_pru_r30_6, MODE5 | OUTPUT | PRU, CH_6 */
			0x0b4 0x25	/* lcd_data5.pr1_pru1_pru_r30_5, MODE5 | OUTPUT | PRU, CH_7 */
			0x0b0 0x25	/* lcd_data4.pr1_pru1_pru_r30_4, MODE5 | OUTPUT | PRU, CH_8 */
            /*AB for SY crop controlling*/
			0x0a8 0x25	/* lcd_data2.pr1_pru1_pru_r31_2, MODE6 | INPUT | PRU, rcin_ch1 -> CH_10 */
			0x0ac 0x25	/* lcd_data3.pr1_pru1_pru_r31_3, MODE5 | INPUT | PRU, rcin_ch2 */

            /*AB for pwm extend*/
			0x0a0 0x25	/* lcd_data0.pr1_pru1_pru_r31_0, MODE6 | INPUT | PRU, rcin_ch3 */
			0x0a4 0x25	/* lcd_data1.pr1_pru1_pru_r31_1, MODE6 | INPUT | PRU, rcin_ch4 */

			/*BONE_P8_12 (PIN_OUTPUT_PULLDOWN | MUX_MODE6)*/ /* HC-SR04 TRIG */
			/*BONE_P8_16 (PIN_INPUT_PULLDOWN | MUX_MODE6)*/ /* HC-SR04 ECHO */

			/*BONE_P9_25 (PIN_INPUT_PULLDOWN | MUX_MODE6)*/ /* MPU9250 INT */
		>;
	};

    /*AB ZhaoYJ@2016-10-20 for i2c1 (HMC5883)*/
	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x180 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P9_26, i2c1_sda*/
			0x184 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P9_24, i2c1_scl*/
		>;
	};

	spi0_pins: pinmux_spi0_pins {
		pinctrl-single,pins = <
                  0x150 0x30   /* spi0_sclk, SPI0_SCLK P9_22 */
                  0x154 0x18   /* spi0_d0, SPI0_MOSI  P9_21 */
                  0x158 0x38   /* spi0_d1, SPI0_MISO P9_18 */
                  /* 0x15C 0x10   spi0_cs0, P9_17 */
                  /* setup a dummy CS for the SPI driver to use, then
                     setup pin modes for the two real CS lines to
                     set them pull-up */
		>;
	};

	spi1_pins: pinmux_spi1_pins {
		pinctrl-single,pins = <
                0x190 0x33      /* mcasp0_aclkx.spi1_sclk, SPI1_SCLK P9_31 */
                0x194 0x13      /* mcasp0_fsx.spi1_d0, SPI1_MOSI P9_29 */
                0x198 0x33      /* mcasp0_axr0.spi1_d1, SPI1_MISO P9_30 */
                /* setup a dummy CS for the SPI driver to use, then
                   setup pin modes for the four real CS lines to
                   set them pull-up */
				0x044 0x37      /* P9_23 MPU9250 CS */
                /*start --- add by ZhaoYJ@2016-05-06*/
                /*start --- update dd by ZhaoYJ@2016-10-20*/
				0x030 0x37      /* MS5803 CS, P8_12 */
				0x028 0x37      /* ICM20689 CS, P8_14 */
				0x038 0x37      /* HMC5983 CS, P8_16 */
				0x08c 0x37      /* M8T CS, P8_18 */
                /*Control enable*/
                0x094 0x27      /* P8_8, add for VCC_3V3_EN*/
                0x09c 0x27      /* P8_9, add for VCC_3V3_SENSOR_EN */
                0x098 0x27      /* P8_10, add for VCC_3V3_GPS_EN*/
                0x078 0x27      /* P9_12, add for OUTPUT_EN */
                /*LEDs & ALARM*/
                0x07c 0x27     /* FLIGHT STATUS LED */
                0x0C8 0x27     /* lcd_data10, GPIO2_16, P8_36, PULL_DOWN, add for buzzer ALARM*/
                /*end --- add by ZhaoYJ@2016-05-06*/

		>;
	};

	uart4_pins: pinmux_uart4_pins {
		pinctrl-single,pins = <
			/* P9_11: gpmc_wait0.uart4_rxd_mux2 */
			BONE_P9_11 (PIN_INPUT_PULLUP | MUX_MODE6)
			/* P9_13: gpmc_wpn.uart4_txd_mux2  */
			BONE_P9_13 (PIN_OUTPUT_PULLDOWN | MUX_MODE6)
		>;
	};

	uart5_pins: pinmux_uart5_pins {
		pinctrl-single,pins = <
			/* P8_38: lcd_data9.uart5_rxd */
			BONE_P8_38 (PIN_INPUT_PULLUP | MUX_MODE4)
			/* P8_37: lcd_data8.uart5_txd */
			BONE_P8_37 (PIN_OUTPUT_PULLDOWN | MUX_MODE4)
		>;
	};
};


&spi0 {
        pinctrl-names = "default";
	    pinctrl-0 = <&spi0_pins>;
        ti,pindir-d0-out-d1-in = <1>;
        status = "okay";
        #address-cells = <1>;
        #size-cells = <0>;
        clock-frequency = <1000000>;
        spidev@0 {
                 spi-max-frequency = <2000000>;
                 reg = <0>;
                 compatible = "linux,spidev";
            };

        /* adis driver
        imu@0 {
                 #address-cells = <1>;
                 #size-cells = <0>;
                 compatible = "adi,adis16365";
                 reg = <0>;
                 spi-cpol;
                 spi-cpha;
                 spi-max-frequency = <2000000>;
            };
            */
};

&spi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi1_pins>;
	status = "okay";
        ti,pindir-d0-out-d1-in = <1>;
        spidev@1 {
                 spi-max-frequency = <24000000>;
                 reg = <0>;
                 compatible = "linux,spidev";
            };
};

/* Definitions for ADC */

&tscadc {
        status = "okay";
};

&am335x_adc {
        ti,adc-channels = <0 1 2 3 4 5 6 7>;
};

&pruss {
	pinctrl-names = "default";
	pinctrl-0 = <&pru_pins>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins>;
	status = "okay";
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;

	status = "okay";
	clock-frequency = <400000>;
};

